name: Draft new hotfix 
run-name: Draft new release ${{ inputs.version }}
on:
  workflow_dispatch:
    inputs:
      branchName:
        description: 'The branch you want to create for hotfix'
        default: 'hotfix/'
        type: string
        required: true

jobs:
  get-tag-name:
    runs-on: ubuntu-latest
    steps:
      - name: Get tag name
        id: get-tag-name
        uses: actions/github-script@v5
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const tag = context.ref.replace('refs/tags/', '')
            core.setOutput('tag', tag)
            console.log(`Tag name is ${tag}`)

  get-version:
      name: get version from tag name
      runs-on: ubuntu-latest
      if: startsWith( steps.get-tag-name.outputs.tag , 'mobile') || startsWith( steps.get-tag-name.outputs.tag , 'web') || startsWith( steps.get-tag-name.outputs.tag , 'ziggy')
      steps:
        - name: Extract version from tag name 
          if: startsWith(steps.get-tag-name.outputs.tag, 'mobile')
          run: |
              TAG_NAME="${{ steps.get-tag-name.outputs.tag }}"
              VERSION=${TAG_NAME#mobile-v}
              echo "RELEASE_VERSION=$VERSION" >> $GITHUB_ENV
              echo "PROJECT=mobile" >> $GITHUB_ENV
    

        - name: Extract version from tag name 
          if: startsWith(steps.get-tag-name.outputs.tag, 'web')
          run: |
              TAG_NAME="${{ steps.get-tag-name.outputs.tag }}"
              VERSION=${TAG_NAME#web-v}
              echo "PROJECT=web" >> $GITHUB_ENV
              echo "RELEASE_VERSION=$VERSION" >> $GITHUB_ENV

        - name: Extract version from tag name 
          if: startsWith(steps.get-tag-name.outputs.tag, 'ziggy')
          run: |
              TAG_NAME="${{ steps.get-tag-name.outputs.tag }}"
              VERSION=${TAG_NAME#ziggy-v}
              echo "PROJECT=ziggy" >> $GITHUB_ENV
              echo "RELEASE_VERSION=$VERSION" >> $GITHUB_ENV

        - name: Bump release version
          id: bump-version
          uses: christian-draeger/increment-semantic-version@1.1.0
          with:
            current-version: ${{ env.RELEASE_VERSION }}
            version-fragment: 'bug'
      outputs:
          version: ${{ env.RELEASE_VERSION }}
          next-version: ${{ steps.bump-version.outputs.next-version }}
          project: ${{ env.PROJECT }}


  draft-new-hotfix:
    needs: get-version
    name: "Draft a new release"
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Create release branch
        run: git checkout -b release/${{ needs.get-version.outputs.project }}-v${{ needs.get-version.outputs.next-version }}

      - name: Create hotfix branch
        run: git checkout -b ${{ inputs.branchName }}

      # In order to make a commit, we need to initialize a user.
      # You may choose to write something less generic here if you want, it doesn't matter functionality wise.
      - name: Initialize mandatory git config
        run: |
          git config user.name "GitHub actions"
          git config user.email noreply@github.com

      - name: Push new branch
        run: git push origin ${{ inputs.branchName }}
      - name: Push new branch
        run: git push origin release/${{ needs.get-version.outputs.project }}-v${{ needs.get-version.outputs.next-version }}

      - name: Create pull request
        uses: peter-evans/create-pull-request@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          branch: ${{ inputs.branchName }}
          base: release/${{ needs.get-version.outputs.project }}-v${{ needs.get-version.outputs.next-version }}
          title: Release version ${{ inputs.version }}
          draft: true
          labels: bug,duplicate
          reviewers: ${{ github.actor }} # By default, we request a review from the person who triggered the workflow.
          # Write a nice message to the user.
          # We are claiming things here based on the `publish-new-release.yml` workflow.
          # You should obviously adopt it to say the truth depending on your release workflow :)
          body: |
            Hi @${{ github.actor }}!

            This PR was created in response to a manual trigger of the release workflow here: https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}.
            I've updated the changelog and bumped the versions in the manifest files in this commit: ${{ steps.make-commit.outputs.commit }}.

            Merging this PR will create a GitHub release and upload any assets that are created as part of the release build.
  